#pragma once
#include <cstdint>
#include <array>
#include <iostream>
#include <fstream>
#include <time.h>

class chip8
{
	public:
		uint8_t delay; //delay counter
		uint8_t sound; //sound counter

		bool drawFlag;
		std::array <bool, 2048> framebuffer;

		std::array <bool, 16> keypad;

	private:
		uint16_t opcode;
		uint8_t sp; //stack pointer
		uint16_t I; //index register
		uint16_t pc; //program counter

		std::array<uint8_t, 4096> memory;
	
		std::array <uint8_t, 16> V; //general purpose registers
	
		std::array <uint16_t, 16> stack;

		std::array <uint8_t, 80> fontset
		{

			0xF0, 0x90, 0x90, 0x90, 0xF0, //0
			0x20, 0x60, 0x20, 0x20, 0x70, //1
			0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
			0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
			0x90, 0x90, 0xF0, 0x10, 0x10, //4
			0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
			0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
			0xF0, 0x10, 0x20, 0x40, 0x40, //7
			0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
			0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
			0xF0, 0x90, 0xF0, 0x90, 0x90, //A
			0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
			0xF0, 0x80, 0x80, 0x80, 0xF0, //C
			0xE0, 0x90, 0x90, 0x90, 0xE0, //D
			0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
			0xF0, 0x80, 0xF0, 0x80, 0x80  //F

		};

	public:
		bool loadROM(std::string filePath);
		void initialize();
		bool loadROM(const unsigned char rom[], unsigned long romSize);
		void cycle();


};

